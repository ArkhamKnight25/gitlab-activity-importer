name: Build and Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.1'

      - name: Build
        run: |
          # Build for multiple platforms
          set -e  # Exit on any error
          
          PLATFORMS=("linux amd64" "windows amd64" "darwin amd64")
          
          for platform in "${PLATFORMS[@]}"; do
            read -r os arch <<< "$platform"
            echo "Building for $os/$arch..."
            
            binary_name="GitLab-Importer"
            if [ "$os" = "windows" ]; then
              binary_name="$binary_name.exe"
            fi
            
            GOOS=$os GOARCH=$arch go build -ldflags="-X main.Version=${{ github.ref_name }}" \
              -o "build/$binary_name-$os-$arch$([[ $os = "windows" ]] && echo ".exe" || echo "")" \
              ./cmd/main.go
          done

      - name: Create Archives
        run: |
          set -e
          cd build
          
          for file in GitLab-Importer-*; do
            zip "${file}.zip" "$file"
          done

      - name: Generate Release Notes
        id: release_notes
        run: |
          # Get the previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "CHANGELOG=$(git log --pretty=format:'- %s (%h)' | awk '{printf "%s\\n", $0}')" >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG=$(git log --pretty=format:'- %s (%h)' ${PREVIOUS_TAG}..${{ github.ref_name }} | awk '{printf "%s\\n", $0}')" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.ORIGIN_TOKEN }}
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## What's Changed
            ${{ steps.release_notes.outputs.CHANGELOG }}
            
          draft: false
          prerelease: false
          files: |
            build/*.zip
